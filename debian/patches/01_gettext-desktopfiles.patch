# Description: If a .desktop file does not have inline translations, fall back to calling gettext.
## Description: add some description
## Origin/Author: add some origin or author
## Bug: bug URL
# Ubuntu: https://launchpad.net/bugs/3935
# Upstream: http://bugzilla.gnome.org/show_bug.cgi?id=569829
Index: glib2.0-2.54.0/glib/gkeyfile.c
===================================================================
--- glib2.0-2.54.0.orig/glib/gkeyfile.c
+++ glib2.0-2.54.0/glib/gkeyfile.c
@@ -459,6 +459,7 @@ struct _GKeyFile
   GKeyFileFlags flags;
 
   gchar **locales;
+  gchar  *gettext_domain;
 
   volatile gint ref_count;
 };
@@ -583,6 +584,7 @@ g_key_file_init (GKeyFile *key_file)
   key_file->list_separator = ';';
   key_file->flags = 0;
   key_file->locales = g_strdupv ((gchar **)g_get_language_names ());
+  key_file->gettext_domain = NULL;
 }
 
 static void
@@ -602,6 +604,12 @@ g_key_file_clear (GKeyFile *key_file)
       key_file->parse_buffer = NULL;
     }
 
+  if (key_file->gettext_domain)
+    {
+       g_free (key_file->gettext_domain);
+       key_file->gettext_domain = NULL;
+    }
+
   tmp = key_file->groups;
   while (tmp != NULL)
     {
@@ -821,6 +829,11 @@ g_key_file_load_from_fd (GKeyFile
       return FALSE;
     }
 
+  key_file->gettext_domain = g_key_file_get_string (key_file,
+                                                    G_KEY_FILE_DESKTOP_GROUP,
+                                                    G_KEY_FILE_DESKTOP_KEY_GETTEXT_DOMAIN,
+                                                    NULL);
+
   return TRUE;
 }
 
@@ -933,6 +946,11 @@ g_key_file_load_from_data (GKeyFile
       return FALSE;
     }
 
+  key_file->gettext_domain = g_key_file_get_string (key_file,
+                                                    G_KEY_FILE_DESKTOP_GROUP,
+                                                    G_KEY_FILE_DESKTOP_KEY_GETTEXT_DOMAIN,
+                                                    NULL);
+
   return TRUE;
 }
 
@@ -2152,6 +2170,8 @@ g_key_file_get_locale_string (GKeyFile
   GError *key_file_error;
   gchar **languages;
   gboolean free_languages = FALSE;
+  gboolean try_gettext = FALSE;
+  const gchar *msg_locale;
   gint i;
 
   g_return_val_if_fail (key_file != NULL, NULL);
@@ -2173,6 +2193,25 @@ g_key_file_get_locale_string (GKeyFile
       free_languages = FALSE;
     }
   
+  /* we're only interested in gettext translation if we don't have a
+   * translation in the .desktop file itself and if the key is one of the keys
+   * we know we want to translate: Name, GenericName, Comment, Keywords.
+   * Blindly doing this for all keys can give strange result for the icons,
+   * since the Icon is a locale string in the spec, eg.  We also only get
+   * translation in the mo file if the requested locale is the LC_MESSAGES one.
+   * Ideally, we should do more and change LC_MESSAGES to use the requested
+   * locale, but there's no guarantee it's installed on the system and it might
+   * have some side-effects.  Since this is a corner case, let's ignore it. */
+  msg_locale = setlocale (LC_MESSAGES, NULL);
+  try_gettext = msg_locale && key_file->gettext_domain &&
+                (strcmp (group_name, G_KEY_FILE_DESKTOP_GROUP) == 0 ||
+                 g_str_has_prefix (group_name, G_KEY_FILE_DESKTOP_ACTION_GROUP_PREFIX)) &&
+                (strcmp (key, G_KEY_FILE_DESKTOP_KEY_NAME) == 0 ||
+                 strcmp (key, G_KEY_FILE_DESKTOP_KEY_FULLNAME) == 0 ||
+                 strcmp (key, G_KEY_FILE_DESKTOP_KEY_GENERIC_NAME) == 0 ||
+                 strcmp (key, G_KEY_FILE_DESKTOP_KEY_KEYWORDS) == 0 ||
+                 strcmp (key, G_KEY_FILE_DESKTOP_KEY_COMMENT) == 0);
+
   for (i = 0; languages[i]; i++)
     {
       candidate_key = g_strdup_printf ("%s[%s]", key, languages[i]);
@@ -2189,6 +2228,39 @@ g_key_file_get_locale_string (GKeyFile
       translated_value = NULL;
    }
 
+  /* Fallback to gettext */
+  if (try_gettext && !translated_value)
+    {
+      gchar *orig_value = g_key_file_get_string (key_file, group_name, key, NULL);
+
+      if (orig_value)
+        {
+          gboolean codeset_set;
+          const gchar *translated;
+          gboolean has_gettext;
+
+          codeset_set = bind_textdomain_codeset (key_file->gettext_domain, "UTF-8") != NULL;
+          translated = NULL;
+
+          translated = g_dgettext (key_file->gettext_domain,
+                                   orig_value);
+          has_gettext = translated != orig_value;
+
+          g_free (orig_value);
+
+          if (has_gettext)
+            {
+              if (codeset_set)
+                translated_value = g_strdup (translated);
+              else
+                translated_value = g_locale_to_utf8 (translated,
+                                                     -1, NULL, NULL, NULL);
+            }
+          else
+            translated_value = NULL;
+        }
+    }
+
   /* Fallback to untranslated key
    */
   if (!translated_value)
Index: glib2.0-2.54.0/glib/gkeyfile.h
===================================================================
--- glib2.0-2.54.0.orig/glib/gkeyfile.h
+++ glib2.0-2.54.0/glib/gkeyfile.h
@@ -293,6 +293,7 @@ gboolean  g_key_file_remove_group
 
 /* Defines for handling freedesktop.org Desktop files */
 #define G_KEY_FILE_DESKTOP_GROUP                "Desktop Entry"
+#define G_KEY_FILE_DESKTOP_ACTION_GROUP_PREFIX  "Desktop Action"
 
 #define G_KEY_FILE_DESKTOP_KEY_TYPE             "Type"
 #define G_KEY_FILE_DESKTOP_KEY_VERSION          "Version"
@@ -315,6 +316,9 @@ gboolean  g_key_file_remove_group
 #define G_KEY_FILE_DESKTOP_KEY_URL              "URL"
 #define G_KEY_FILE_DESKTOP_KEY_DBUS_ACTIVATABLE "DBusActivatable"
 #define G_KEY_FILE_DESKTOP_KEY_ACTIONS          "Actions"
+#define G_KEY_FILE_DESKTOP_KEY_GETTEXT_DOMAIN   "X-GNOME-Gettext-Domain"
+#define G_KEY_FILE_DESKTOP_KEY_FULLNAME         "X-GNOME-FullName"
+#define G_KEY_FILE_DESKTOP_KEY_KEYWORDS         "Keywords"
 
 #define G_KEY_FILE_DESKTOP_TYPE_APPLICATION     "Application"
 #define G_KEY_FILE_DESKTOP_TYPE_LINK            "Link"
